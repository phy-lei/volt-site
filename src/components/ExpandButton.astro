---
interface Props {
  onClick: (flag: 'expand' | 'close') => void;
}
const { onClick } = Astro.props;
---

<expand-button class="expand-button kiana" data-handle-click={onClick}>
  <span></span>
  <span></span>
  <span></span>
</expand-button>

<style>
  .expand-button {
    cursor: pointer;
    padding: 5px;
    display: block;
  }
  .expand-button span {
    width: 24px;
    height: 3px;
    background-color: rgb(8, 15, 26);
    display: block;
    margin: 4px auto;
    transition: transform 0.2s ease-in 0s;
  }
  .expand-button-close span:nth-of-type(1) {
    transform: translateY(7px) rotate(45deg);
  }
  .expand-button-close span:nth-of-type(2) {
    opacity: 0;
  }
  .expand-button-close span:nth-of-type(3) {
    transform: translateY(-7px) rotate(-45deg);
  }
</style>

<script>
  class ExpandButton extends HTMLElement {
    constructor() {
      super();
      const handleClick = this.dataset.handleClick;
      this.addEventListener('click', () => {
        console.dir(this, handleClick);
        console.log(
          '%c [ xxx ]',
          'font-size:13px; background:pink; color:#bf2c9f;',
          handleClick
        );
        if (this.classList.contains('expand-button-close')) {
          this.classList.remove('expand-button-close');
        } else {
          this.classList.add('expand-button-close');
        }
      });
    }
  }

  customElements.define('expand-button', ExpandButton);
</script>
